{"version":3,"sources":["app.js"],"names":["express","require","session","MongoStore","mongoose","pug","passport","config","routes","app","PORT","process","env","MONGO_STRING","DB_STRING","connect","then","console","log","err","use","urlencoded","extended","secret","resave","saveUninitialized","store","create","mongoUrl","mongooseConnection","connection","initialize","set","__dirname","listen"],"mappings":";;AAAA,IAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAME,UAAU,GAAGF,OAAO,CAAC,eAAD,CAA1B;;AACA,IAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMI,GAAG,GAAGJ,OAAO,CAAC,KAAD,CAAnB;;AACA,IAAMK,QAAQ,GAAGL,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBM,MAAlB;;AACAN,OAAO,CAAC,mBAAD,CAAP;;AAEA,IAAMO,MAAM,GAAGP,OAAO,CAAC,oBAAD,CAAtB,C,CAGA;;;AACA,IAAMQ,GAAG,GAAGT,OAAO,EAAnB,C,CACA;;AACA,IAAMU,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AAEA,IAAMG,YAAY,GAAGF,OAAO,CAACC,GAAR,CAAYE,SAAjC;AAEAV,QAAQ,CAACW,OAAT,CAAiBF,YAAjB,EACKG,IADL,CACUC,OAAO,CAACC,GAAR,6BAAiCL,YAAjC,EADV,WAEW,UAAAM,GAAG;AAAA,SAAIF,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BC,GAA7B,CAAJ;AAAA,CAFd;AAIAV,GAAG,CAACW,GAAJ,CAAQpB,OAAO,CAACqB,UAAR,CAAmB;AAAEC,EAAAA,QAAQ,EAAE;AAAZ,CAAnB,CAAR,E,CAGA;;AACAb,GAAG,CAACW,GAAJ,CACIlB,OAAO,CAAC;AACJqB,EAAAA,MAAM,EAAE,eADJ;AAEJC,EAAAA,MAAM,EAAE,KAFJ;AAGJC,EAAAA,iBAAiB,EAAE,IAHf;AAIJC,EAAAA,KAAK,EAAEvB,UAAU,CAACwB,MAAX,CAAkB;AACrBC,IAAAA,QAAQ,EAAEf,YADW;AAErBgB,IAAAA,kBAAkB,EAAEzB,QAAQ,CAAC0B;AAFR,GAAlB;AAJH,CAAD,CADX,E,CAWA;;AACArB,GAAG,CAACW,GAAJ,CAAQd,QAAQ,CAACyB,UAAT,EAAR;AACAtB,GAAG,CAACW,GAAJ,CAAQd,QAAQ,CAACJ,OAAT,EAAR,E,CAEA;;AACAO,GAAG,CAACW,GAAJ,CAAQ,GAAR,EAAaZ,MAAb,E,CAGA;;AACAC,GAAG,CAACuB,GAAJ,CAAQ,OAAR,YAAoBC,SAApB;AACAxB,GAAG,CAACuB,GAAJ,CAAQ,aAAR,EAAuB,KAAvB,E,CAGA;;AACAvB,GAAG,CAACyB,MAAJ,CAAWxB,IAAX,EAAiB,YAAM;AACnBO,EAAAA,OAAO,CAACC,GAAR,uCAA2CR,IAA3C;AACH,CAFD","sourcesContent":["const express = require('express');\r\nconst session = require('express-session');\r\nconst MongoStore = require('connect-mongo');\r\nconst mongoose = require('mongoose');\r\nconst pug = require('pug');\r\nconst passport = require('passport');\r\nrequire('dotenv').config();\r\nrequire('./config/passport');\r\n\r\nconst routes = require('./routes/router.js');\r\n\r\n\r\n// initialize method\r\nconst app = express();\r\n// use port from env or default to 3000 if not set\r\nconst PORT = process.env.PORT || 3000;\r\n\r\nconst MONGO_STRING = process.env.DB_STRING;\r\n\r\nmongoose.connect(MONGO_STRING)\r\n    .then(console.log(`MongoDB connected ${MONGO_STRING}`))\r\n    .catch(err => console.log('MongoDB ERROR' ,err));\r\n\r\napp.use(express.urlencoded({ extended: false }));\r\n\r\n\r\n// Express session\r\napp.use(\r\n    session({\r\n        secret: \"super secret!\",\r\n        resave: false,\r\n        saveUninitialized: true,\r\n        store: MongoStore.create({ \r\n            mongoUrl: MONGO_STRING,\r\n            mongooseConnection: mongoose.connection }),\r\n    })\r\n);\r\n\r\n// Passport middleware\r\napp.use(passport.initialize());\r\napp.use(passport.session());\r\n\r\n// configure routes\r\napp.use('/', routes);\r\n\r\n\r\n// setup template engine\r\napp.set(\"views\", `${__dirname}/views`);\r\napp.set(\"view engine\", \"pug\");\r\n\r\n\r\n// Listent on port\r\napp.listen(PORT, () => {\r\n    console.log(`Server is listening on port ${PORT}`);\r\n})"],"file":"app.dev.js"}