{"version":3,"sources":["database.js"],"names":["mongoose","require","config","Promise","global","conn","process","env","DB_STRING","connect","userSchema","Schema","username","String","hashPassword","required","default","module","exports","User","model"],"mappings":"aAAA,IAAMA,SAAWC,QAAQ,YACzBA,QAAQ,UAAUC,SAElBF,SAASG,QAAUC,OAAOD,QAE1B,IAAME,KAAOC,QAAQC,IAAIC,UAEzBR,SAASS,QAAQJ,MAIjB,IAAMK,WAAa,IAAIV,SAASW,OAAO,CAAvCC,SAAMF,OACLE,aAAUC,OACVC,QAAAA,CAAAA,KAAcD,QAFwBE,UAAA,EAAAC,SAAA,KAGIC,OAAAC,QAASC,KAAAnB,SAAAoB,MAAA,OAAAV","file":"database.min.js","sourcesContent":["const mongoose = require('mongoose');\r\nrequire('dotenv').config();\r\n\r\nmongoose.Promise = global.Promise;\r\n//  Connect to MongoDB Server using the connection string in the `.env` file.\r\nconst conn = process.env.DB_STRING;\r\n\r\nmongoose.connect(conn);\r\n\r\n// Creates simple schema for a User. \r\n// The hash and salt are derived from the user's given password when they register\r\nconst userSchema = new mongoose.Schema({\r\n\tusername: String,\r\n\thashPassword: String,\r\n\tisAdmin: { type: Boolean, required: true, default: false }\r\n});\r\n\r\n// Expose the connection\r\nmodule.exports.User = mongoose.model('user', userSchema);"]}