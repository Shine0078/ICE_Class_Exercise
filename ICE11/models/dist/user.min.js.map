{"version":3,"sources":["user.js"],"names":["mongoose","require","Promise","config","global","DB_STRING","console","log","process","conn","userSchema","Schema","username","String","hashPassword","isAdmin","type","Boolean","required","default","module","exports","User","model"],"mappings":"aAGA,IAAAA,SAAAC,QAAA,YACAA,QAAMD,UAAWC,SACjBA,SAAQC,QAAUC,OAAlBD,QAEAF,IAAAA,KAASE,QAAUE,IAAMC,UAEzBC,QAAUC,IAAGC,MAEbF,SAAQC,iBAARE,MAKA,IAAMC,WAAa,IAAIV,SAASW,OAAO,CACtCC,SAAQC,OACRC,aAAYD,OACZE,QAAO,CAAEC,KAAAC,QAAAC,UAAA,EAAAC,SAAA,KAAAC,OAAAC,QAAAC,KAAAtB,SAAAuB,MAAA,OAAAb","file":"user.min.js","sourcesContent":["\r\n//Name: Samuel Abraham\r\n//ICE11\r\n// INFT2202\r\nconst mongoose = require('mongoose');\r\nrequire('dotenv').config();\r\n\r\nmongoose.Promise = global.Promise;\r\n//  Connect to MongoDB Server using the connection string in the `.env` file.\r\nconst conn = process.env.DB_STRING;\r\n\r\nconsole.log(conn);\r\nmongoose.createConnection(conn);\r\n\r\n// Creates simple schema for a User. \r\n// The hash and salt are derived from the user's given password when they register\r\nconst userSchema = new mongoose.Schema({\r\n\tusername: String,\r\n\thashPassword: String,\r\n\tisAdmin: { type: Boolean, required: true, default: false }\r\n});\r\n\r\n// Expose the connection\r\nmodule.exports.User = mongoose.model('user', userSchema);\r\n"]}