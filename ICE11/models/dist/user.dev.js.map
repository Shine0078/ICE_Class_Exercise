{"version":3,"sources":["user.js"],"names":["mongoose","require","config","Promise","global","conn","process","env","DB_STRING","console","log","createConnection","userSchema","Schema","username","String","hashPassword","isAdmin","type","Boolean","required","module","exports","User","model"],"mappings":";;AACA;AACA;AACA;AACA,IAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACAA,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEAF,QAAQ,CAACG,OAAT,GAAmBC,MAAM,CAACD,OAA1B,C,CACA;;AACA,IAAME,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAAzB;AAEAC,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAL,QAAQ,CAACW,gBAAT,CAA0BN,IAA1B,E,CAEA;AACA;;AACA,IAAMO,UAAU,GAAG,IAAIZ,QAAQ,CAACa,MAAb,CAAoB;AACtCC,EAAAA,QAAQ,EAAEC,MAD4B;AAEtCC,EAAAA,YAAY,EAAED,MAFwB;AAGtCE,EAAAA,OAAO,EAAE;AAAEC,IAAAA,IAAI,EAAEC,OAAR;AAAiBC,IAAAA,QAAQ,EAAE,IAA3B;AAAiC,eAAS;AAA1C;AAH6B,CAApB,CAAnB,C,CAMA;;AACAC,MAAM,CAACC,OAAP,CAAeC,IAAf,GAAsBvB,QAAQ,CAACwB,KAAT,CAAe,MAAf,EAAuBZ,UAAvB,CAAtB","sourcesContent":["\r\n//Name: Samuel Abraham\r\n//ICE11\r\n// INFT2202\r\nconst mongoose = require('mongoose');\r\nrequire('dotenv').config();\r\n\r\nmongoose.Promise = global.Promise;\r\n//  Connect to MongoDB Server using the connection string in the `.env` file.\r\nconst conn = process.env.DB_STRING;\r\n\r\nconsole.log(conn);\r\nmongoose.createConnection(conn);\r\n\r\n// Creates simple schema for a User. \r\n// The hash and salt are derived from the user's given password when they register\r\nconst userSchema = new mongoose.Schema({\r\n\tusername: String,\r\n\thashPassword: String,\r\n\tisAdmin: { type: Boolean, required: true, default: false }\r\n});\r\n\r\n// Expose the connection\r\nmodule.exports.User = mongoose.model('user', userSchema);\r\n"],"file":"user.dev.js"}